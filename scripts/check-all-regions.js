const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function checkAllRegions() {
  console.log('üóæ ÂÖ®ÂõΩÂú∞ÂüüÊäïÁ®ø„ÅÆË©≥Á¥∞Á¢∫Ë™ç...\n');
  
  try {
    // Âú∞ÂüüÂà•„ÅÆÊäïÁ®øÊï∞„ÇíÈõÜË®à
    const { data: posts } = await supabase
      .from('board_posts')
      .select('title')
      .like('title', '%„Äê%„Äë%')
      .order('created_at', { ascending: false });
    
    // Âú∞ÂüüÂêç„ÇíÊäΩÂá∫„Åó„Å¶ÈõÜË®à
    const regionCounts = {};
    posts.forEach(post => {
      const match = post.title.match(/„Äê(.+?)„Äë/);
      if (match) {
        const location = match[1];
        regionCounts[location] = (regionCounts[location] || 0) + 1;
      }
    });
    
    // Âú∞ÂüüÂà•„Å´ÈõÜË®àÁµêÊûú„ÇíË°®Á§∫
    console.log('üìä Âú∞ÂüüÂà•ÊäïÁ®øÊï∞:');
    console.log('=====================================');
    
    // Âú∞Âüü„ÇíÈÉΩÈÅìÂ∫úÁúåÂà•„Å´„Ç∞„É´„Éº„ÉóÂåñ
    const prefectures = {
      'ÂåóÊµ∑ÈÅì': ['Êú≠Âπå', 'Êó≠Â∑ù', 'ÂáΩÈ§®', 'Â∏ØÂ∫É', 'ÈáßË∑Ø', 'Ëã´Â∞èÁâß', 'Â∞èÊ®Ω', 'ÂåóË¶ã', 'ÂÆ§Ëò≠', 'ÂçÉÊ≠≥'],
      'Êù±Âåó': ['‰ªôÂè∞', 'ÈùíÊ£Æ', 'ÁõõÂ≤°', 'ÁßãÁî∞', 'Â±±ÂΩ¢', 'Á¶èÂ≥∂', 'ÈÉ°Â±±', 'ÂÖ´Êà∏', 'ÂºòÂâç', 'Á±≥Ê≤¢'],
      'Èñ¢Êù±': ['Êù±‰∫¨', 'Êñ∞ÂÆø', 'Ê∏ãË∞∑', 'Ê®™Êµú', 'ÂçÉËëâ', '„Åï„ÅÑ„Åü„Åæ', 'Â∑ùÂ¥é', 'Áõ∏Ê®°Âéü', 'ËàπÊ©ã', 'ÂÖ´ÁéãÂ≠ê', 'Êüè', 'Ëó§Ê≤¢', 'ÂÖ≠Êú¨Êú®', 'Ê±†Ë¢ã', 'ÁßãËëâÂéü'],
      'ÂåóÈô∏„ÉªÁî≤‰ø°Ë∂ä': ['Êñ∞ÊΩü', 'ÈáëÊ≤¢', 'ÂØåÂ±±', 'Á¶è‰∫ï', 'Èï∑Èáé', 'ÊùæÊú¨', '‰∏äÁî∞', 'È´òÂ≤°', 'Â∞èÊùæ', '‰∏äË∂ä'],
      'Êù±Êµ∑': ['ÂêçÂè§Â±ã', 'ÈùôÂ≤°', 'ÊµúÊùæ', 'Â≤êÈòú', 'ÂõõÊó•Â∏Ç', 'Ë±äÊ©ã', 'Ë±äÁî∞', 'Â≤°Â¥é', '‰∏ÄÂÆÆ', 'Ê¥•'],
      'Èñ¢Ë•ø„ÉªËøëÁïø': ['Â§ßÈò™', '‰∫¨ÈÉΩ', 'Á•ûÊà∏', 'Â•àËâØ', 'ÂíåÊ≠åÂ±±', 'Â§ßÊ¥•', 'Â†∫', 'Êù±Â§ßÈò™', 'Âß´Ë∑Ø', 'Ë•øÂÆÆ', 'Èõ£Ê≥¢', 'Ê¢ÖÁî∞', 'ÂøÉÊñéÊ©ã'],
      '‰∏≠ÂõΩ': ['Â∫ÉÂ≥∂', 'Â≤°Â±±', '‰∏ãÈñ¢', 'ÂÄâÊï∑', 'Á¶èÂ±±', 'Â±±Âè£', 'È≥•Âèñ', 'ÊùæÊ±ü', 'Âëâ', 'Â∞æÈÅì'],
      'ÂõõÂõΩ': ['È´òÊùæ', 'ÊùæÂ±±', 'È´òÁü•', 'Âæ≥Â≥∂', '‰ªäÊ≤ª', 'Êñ∞Â±ÖÊµú', 'Ë•øÊù°', '‰∏∏‰∫Ä', 'ÂÆáÂíåÂ≥∂', 'È≥¥ÈñÄ'],
      '‰πùÂ∑û„ÉªÊ≤ñÁ∏Ñ': ['Á¶èÂ≤°', 'Âåó‰πùÂ∑û', 'ÁÜäÊú¨', 'ÈπøÂÖêÂ≥∂', 'Èï∑Â¥é', 'Â§ßÂàÜ', 'ÂÆÆÂ¥é', '‰ΩêË≥Ä', 'ÈÇ£Ë¶á', 'Ê≤ñÁ∏ÑÂ∏Ç', 'Â§©Á•û', 'ÂçöÂ§ö'],
      'ÂÖ®ÂõΩ': ['ÂÖ®ÂõΩ', '„Ç™„É≥„É©„Ç§„É≥', '„Å©„Åì„Åß„ÇÇ', 'Áõ∏Ë´á', 'ÁßªÂãïÂèØ']
    };
    
    let grandTotal = 0;
    for (const [region, cities] of Object.entries(prefectures)) {
      console.log(`\nüåç ${region}:`);
      let regionTotal = 0;
      
      const cityCounts = cities.map(city => {
        const count = regionCounts[city] || 0;
        regionTotal += count;
        return { city, count };
      }).filter(item => item.count > 0);
      
      cityCounts.forEach(({ city, count }) => {
        console.log(`   ${city}: ${count}‰ª∂`);
      });
      
      // „Åù„ÅÆ‰ªñ„ÅÆÂú∞ÂüüÂêç„ÇÇÊ§úÁ¥¢
      Object.keys(regionCounts).forEach(location => {
        if (location.includes(region.split('„Éª')[0]) && !cities.includes(location)) {
          const count = regionCounts[location];
          console.log(`   ${location}: ${count}‰ª∂`);
          regionTotal += count;
        }
      });
      
      console.log(`   Â∞èË®à: ${regionTotal}‰ª∂`);
      grandTotal += regionTotal;
    }
    
    console.log('\n=====================================');
    console.log(`üìä Á∑èÊäïÁ®øÊï∞: ${grandTotal}‰ª∂`);
    console.log('=====================================');
    
    // Ëøî‰ø°Êï∞„ÇÇÁ¢∫Ë™ç
    const { count: replyCount } = await supabase
      .from('board_replies')
      .select('*', { count: 'exact', head: true });
    
    console.log(`üí¨ Á∑èËøî‰ø°Êï∞: ${replyCount}‰ª∂`);
    console.log('=====================================');
    
    // ‰∫∫Ê∞óÊäïÁ®øTOP10
    console.log('\nüî• ‰∫∫Ê∞óÊäïÁ®øTOP10:');
    const { data: popularPosts } = await supabase
      .from('board_posts')
      .select('title, view_count, plus_count')
      .like('title', '%„Äê%„Äë%')
      .order('view_count', { ascending: false })
      .limit(10);
    
    popularPosts.forEach((post, index) => {
      console.log(`${index + 1}. ${post.title}`);
      console.log(`   Èñ≤Ë¶ßÊï∞: ${post.view_count}, „ÅÑ„ÅÑ„Å≠: ${post.plus_count}`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
}

checkAllRegions();